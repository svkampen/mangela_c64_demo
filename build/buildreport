
; ******** Source: source/main.asm
     1                              music_addr=$7000
     2                              sid_init = $7000
     3                              sid_play = $7003
     4                              *=music_addr
     5  7000 4c76704c7a70b969...    !bin "source/fallen_down.sid",,$7e
     6                          
     7                              ctr=$4000
     8                              clr=$4004
     9                          
    10                              *=$C000
    11                          
    12  c000 a904                   lda #4
    13  c002 8d0040                 sta ctr
    14                          
    15  c005 2014c0                 jsr init_intr
    16  c008 2041c0                 jsr init_screen
    17  c00b 2069c0                 jsr init_text
    18  c00e 200070                 jsr sid_init
    19  c011 4c11c0                 jmp *
    20                          
    21                          init_intr:
    22  c014 78                     sei
    23  c015 a07f                   ldy #$7f
    24  c017 8c0ddc                 sty $dc0d
    25  c01a 8c0ddd                 sty $dd0d
    26  c01d ad0ddc                 lda $dc0d
    27  c020 ad0ddd                 lda $dd0d
    28                          
    29  c023 a901                   lda #$01
    30  c025 8d1ad0                 sta $d01a
    31                          
    32  c028 a989                   lda #<irq
    33  c02a a2c0                   ldx #>irq
    34                          
    35  c02c 8d1403                 sta $314
    36  c02f 8e1503                 stx $315
    37                          
    38  c032 a900                   lda #$00
    39  c034 8d12d0                 sta $d012
    40                          
    41  c037 ad11d0                 lda $d011
    42  c03a 297f                   and #$7f
    43  c03c 8d11d0                 sta $d011
    44                          
    45  c03f 58                     cli
    46                          
    47  c040 60                     rts
    48                          
    49                          init_screen:
    50  c041 a200                   ldx #$00    ; set X to black
    51  c043 8e21d0                 stx $d021   ; set background color
    52  c046 8e20d0                 stx $d020   ; set border color
    53                          clear:
    54  c049 a920                   lda #$20    ; Spacebar
    55  c04b 9d0004                 sta $0400,x
    56  c04e 9d0005                 sta $0500,x
    57  c051 9d0006                 sta $0600,x
    58  c054 9de806                 sta $06e8,x
    59  c057 a900                   lda #$00
    60  c059 9d00d8                 sta $d800,x
    61  c05c 9d00d9                 sta $d900,x
    62  c05f 9d00da                 sta $da00,x
    63  c062 9de8da                 sta $dae8,x
    64  c065 e8                     inx
    65                          
    66  c066 d0e1                   bne clear
    67                          
    68  c068 60                     rts
    69                          
    70                          init_text:
    71  c069 a200                   ldx #$00
    72                          loop_text:
    73  c06b bd7ac1                 lda line,x
    74  c06e 9d4005                 sta $0540,x
    75                          
    76  c071 bda2c1                 lda line2,x
    77  c074 9d9005                 sta $0590,x
    78                          
    79  c077 bdcac1                 lda line3,x
    80  c07a 9de005                 sta $05e0,x
    81                          
    82  c07d bdf2c1                 lda line4,x
    83  c080 9d3006                 sta $0630,x
    84                          
    85  c083 e8                     inx
    86  c084 e028                   cpx #$28
    87  c086 d0e3                   bne loop_text
    88  c088 60                     rts
    89                          
    90                          irq:
    91  c089 ce19d0                 dec $d019
    92                          
    93  c08c 203bc1                 jsr colwash
    94  c08f 200370                 jsr sid_play
    95                          
    96  c092 4c81ea                 jmp $ea81
    97                          
    98                          irq_:
    99  c095 a9bf                   lda #<irq2
   100  c097 8d1403                 sta $314
   101  c09a a9c0                   lda #>irq2
   102  c09c 8d1503                 sta $315
   103  c09f a9c8                   lda #200
   104  c0a1 8d12d0                 sta $d012
   105                          
   106  c0a4 a200                   ldx #0
   107  c0a6 8e21d0                 stx $d021
   108  c0a9 8e20d0                 stx $d020
   109                          
   110  c0ac 0e19d0                 asl $d019
   111                          
   112  c0af ce0040                 dec ctr
   113  c0b2 d008                   bne irq_end
   114                          
   115  c0b4 a904                   lda #4
   116  c0b6 8d0040                 sta ctr
   117  c0b9 203bc1                 jsr colwash
   118                          ;
   119                          ;    inc clr
   120                          ;    ldx clr
   121                          ;    cpx #13
   122                          ;    bne irq_end
   123                          ;
   124                          ;    ldx #0
   125                          ;    stx clr
   126                          
   127                          irq_end:
   128  c0bc 4ce5c0                 jmp irq_common_end
   129                          
   130                          irq2:
   131  c0bf ae0440                 ldx clr
   132                          
   133                          wait_line:
   134  c0c2 ad12d0                 lda $d012
   135  c0c5 cd12d0                 cmp $d012
   136  c0c8 f0f8                   beq wait_line
   137                          
   138  c0ca 8e20d0                 stx $d020
   139  c0cd 8e21d0                 stx $d021
   140                          
   141                          irq2_end:
   142  c0d0 a989                   lda #<irq
   143  c0d2 8d1403                 sta $314
   144  c0d5 a9c0                   lda #>irq
   145  c0d7 8d1503                 sta $315
   146  c0da a900                   lda #0
   147  c0dc 8d12d0                 sta $d012
   148                          
   149  c0df 0e19d0                 asl $d019
   150  c0e2 4ce5c0                 jmp irq_common_end
   151                          
   152                          
   153                          irq_common_end: ; plays music, then ends interrupt handler
   154  c0e5 200370                 jsr sid_play
   155  c0e8 4c81ea                 jmp $ea81
   156                          
   157                          

; ******** Source: source/data_colorwash.asm
     1                          ; color data table
     2                          ; first 9 rows (40 bytes) are used for the color washer
     3                          ; on start the gradient is done by byte 40 is mirroed in byte 1, byte 39 in byte 2 etc... 
     4                          
     5  c0eb 0a0a080807         color   !byte $0a,$0a,$08,$08,$07
     6  c0f0 07070d0d0d                 !byte $07,$07,$0d,$0d,$0d
     7  c0f5 0505050e0e                 !byte $05,$05,$05,$0e,$0e
     8  c0fa 0606030303                 !byte $06,$06,$03,$03,$03
     9  c0ff 0404040303                 !byte $04,$04,$04,$03,$03
    10  c104 0306060e0e                 !byte $03,$06,$06,$0e,$0e
    11  c109 0505050d0d                 !byte $05,$05,$05,$0d,$0d
    12  c10e 0d07070708                 !byte $0d,$07,$07,$07,$08
    13                          
    14  c113 0a0a080807         color2  !byte $0a,$0a,$08,$08,$07
    15  c118 07070d0d0d                 !byte $07,$07,$0d,$0d,$0d
    16  c11d 0505050e0e                 !byte $05,$05,$05,$0e,$0e
    17  c122 0606030303                 !byte $06,$06,$03,$03,$03
    18  c127 0404040303                 !byte $04,$04,$04,$03,$03
    19  c12c 0306060e0e                 !byte $03,$06,$06,$0e,$0e
    20  c131 0505050d0d                 !byte $05,$05,$05,$0d,$0d
    21  c136 0d07070708                 !byte $0d,$07,$07,$07,$08

; ******** Source: source/main.asm

; ******** Source: source/sub_colorwash.asm
     1  c13b a227               colwash   ldx #$27        ; load x-register with #$27 to work through 0-39 iterations
     2  c13d ad12c1                       lda color+$27   ; init accumulator with the last color from first color table
     3                          
     4  c140 bceac0             cycle1    ldy color-1,x   ; remember the current color in color table in this iteration
     5  c143 9deac0                       sta color-1,x   ; overwrite that location with color from accumulator
     6  c146 9d90d9                       sta $d990,x     ; put it into Color Ram into column x
     7  c149 9d30da                       sta $da30,x
     8  c14c 98                           tya             ; transfer our remembered color back to accumulator
     9  c14d ca                           dex             ; decrement x-register to go to next iteration
    10  c14e d0f0                         bne cycle1      ; repeat if there are iterations left
    11  c150 8d12c1                       sta color+$27   ; otherwise store te last color from accu into color table
    12  c153 8d90d9                       sta $d990       ; ... and into Color Ram
    13  c156 8d30da                       sta $da30
    14                                                    
    15  c159 a200               colwash2  ldx #$00        ; load x-register with #$00
    16  c15b ad3ac1                       lda color2+$27  ; load the last color from the second color table
    17                          
    18  c15e bc13c1             cycle2    ldy color2,x    ; remember color at currently looked color2 table location
    19  c161 9d13c1                       sta color2,x    ; overwrite location with color from accumulator
    20  c164 9de0d9                       sta $d9e0,x     ; ... and write it to Color Ram
    21  c167 9d40d9                       sta $d940,x
    22  c16a 98                           tya             ; transfer our remembered color back to accumulator 
    23  c16b e8                           inx             ; increment x-register to go to next iteraton
    24  c16c e026                         cpx #$26        ; have we gone through 39 iterations yet?
    25  c16e d0ee                         bne cycle2      ; if no, repeat
    26  c170 8d3ac1                       sta color2+$27  ; if yes, store the final color from accu into color2 table
    27  c173 8d07da                       sta $d9e0+$27   ; and write it into Color Ram
    28  c176 8d67d9                       sta $d940+$27
    29                           
    30  c179 60                           rts             ; return from subroutine

; ******** Source: source/main.asm
   160                          
   161  c17a 202020200d01120e...line:    !scr "    marnix en angola zijn plopkoeken    "
   162  c1a2 202020202020200a...line2:   !scr "       jurriaan is een toffe peer       "
   163  c1ca 20270b20170f1520...line3:   !scr " 'k wou dat het volgend jaar april was  "
   164  c1f2 202017010e142004...line4:   !scr "  want dan is jullie verjaardag alweer  "
